#!/bin/sh

# During uninstall we try to do our best. If something fails then we just continue.
# '+e' - allow script execution with non-zero exit status.
set +e

#exec > ~/Desktop/mwb_uninstall_log.txt 2>&1


## ----------------------------------------
##              Variables
## ----------------------------------------

MB_PRODUCT_IDENTIFIER="mbam"
MB_PRODUCT_IDENTIFIER__UPPERCASE="MBAM"
MB_PRODUCT_DOMAIN="com.malwarebytes.${MB_PRODUCT_IDENTIFIER}"
MB_PRODUCT_DOMAIN_SHORT="MB_${MB_PRODUCT_IDENTIFIER__UPPERCASE}"

APP_SRC="/Applications/Malwarebytes.app"
APP_SUPPORT_DIR="/Library/Application Support/Malwarebytes"
APP_SUPPORT_PRODUCT_DIR="${APP_SUPPORT_DIR}/${MB_PRODUCT_IDENTIFIER__UPPERCASE}"


APP_SRC_V1="/Applications/Malwarebytes Anti-Malware.app/"

APP_SRC_PH_V1="/Library/PrivilegedHelperTools/com.malwarebytes.HelperTool"

APP_SRC_PH_V1_OLD="/Library/PrivilegedHelperTools/com.malwarebytes.MBAMHelperTool"


# File name of our main UI application.
# Note that it has 'Malwarebytes' alias (shown in the Activity Monitor).
FRONTEND_APPLICATION_NAME="FrontendApplication"
FRONTEND_APPLICATION_ALIAS="Malwarebytes"

FRONTEND_LAUNCHER_NAME="Malwarebytes"
FRONTEND_LAUNCHER_ALIAS="${FRONTEND_LAUNCHER_NAME}"

#FRONTEND_APPLICATION_NAME_V1="FrontendApplication"
FRONTEND_APPLICATION_ALIAS_V1="Malwarebytes Anti-Malware"


FRONTEND_LAUNCHER_NAME_V1="Malwarebytes Anti-Malware"
FRONTEND_LAUNCHER_ALIAS_V1="${FRONTEND_LAUNCHER_NAME_V1}"


AGENT_PLIST_SRC="/Library/LaunchAgents/${MB_PRODUCT_DOMAIN}.frontend.agent.plist"

HELPERTOOL_V1="/Library/LaunchDaemons/com.malwarebytes.HelperTool.plist"

HELPERTOOL_V1_OLD="/Library/LaunchDaemons/com.malwarebytes.MBAMHelperTool.plist"


RTP_DAEMON_JOB_NAME="${MB_PRODUCT_DOMAIN}.rtprotection.daemon"
RTP_DAEMON_PLIST_SRC="/Library/LaunchDaemons/${RTP_DAEMON_JOB_NAME}.plist"

SK_DAEMON_JOB_NAME="${MB_PRODUCT_DOMAIN}.settings.daemon"
SK_DAEMON_PLIST_SRC="/Library/LaunchDaemons/${SK_DAEMON_JOB_NAME}.plist"

RTP_KEXT_ID="${MB_PRODUCT_DOMAIN}.rtprotection"
RTP_KEXT_SRC="/Library/Extensions/${MB_PRODUCT_DOMAIN_SHORT}_Protection.kext"
RTP_KEXT_LEGACY_SRC="/Library/Extensions/${RTP_KEXT_ID}.kext"

TRUE=0
FALSE=1

GUEST_UID=201
LAST_SYSTEM_RESERVED_UID=499

## ----------------------------------------
##          Helper Functions
## ----------------------------------------

# - Parameters:
#   - $1: major version.
#   - $2: minor version.
is_available_function()
{
    local CURRENT_OSX_VERSION_MAJOR=$(sw_vers -productVersion | awk -F '.' '{print $1}')
    local CURRENT_OSX_VERSION_MINOR=$(sw_vers -productVersion | awk -F '.' '{print $2}')

    if [ ${CURRENT_OSX_VERSION_MAJOR} -eq $1 ]; then
        if [ ${CURRENT_OSX_VERSION_MINOR} -ge $2 ]; then
            return ${TRUE}
        fi
    else
        if [ ${CURRENT_OSX_VERSION_MAJOR} -gt $1 ]; then
            return ${TRUE}
        fi
    fi

    return ${FALSE}
}

killall_frontends_function()
{
    echo "Killing '${FRONTEND_APPLICATION_NAME}' main UI if it's running..."
    sudo killall "${FRONTEND_APPLICATION_NAME}"

    echo "Killing '${FRONTEND_LAUNCHER_NAME}' launcher if it's running..."
    sudo killall "${FRONTEND_LAUNCHER_NAME}"

     echo "Killing '${FRONTEND_APPLICATION_NAME_V1}' V1 main UI if it's running..."
    sudo killall "${FRONTEND_APPLICATION_NAME_V1}"

     echo "Killing '${FRONTEND_LAUNCHER_NAME_V1}' V1 launcher if it's running..."
    sudo killall "${FRONTEND_LAUNCHER_NAME_V1}"
}

stop_agents_daemons_and_driver_function()
{
    # Agents

    echo "Agent unload for All active users from '${AGENT_PLIST_SRC}'..."

    # Starting from 10.11 we should use new API to load agent
    if is_available_function 10 11; then
        echo "  Using new launchctl interface:"
        for uid in $(ps -axo uid,args | grep -i "[l]oginwindow.app" | awk '{print $1}'); do
            uid=$(echo $uid | cut -d, -f1)
            
            if [[ $uid -gt ${LAST_SYSTEM_RESERVED_UID} || $uid -eq ${GUEST_UID} ]]; then  
                echo "    UID: $uid"
                launchctl bootout gui/"$uid" "${AGENT_PLIST_SRC}"
            fi
        done
    else
        echo "  Using legacy launchctl interface:"
        for pid_uid in $(ps -axo pid,uid,args | grep -i "[l]oginwindow.app" | awk '{print $1 "," $2}'); do
            pid=$(echo $pid_uid | cut -d, -f1)
            uid=$(echo $pid_uid | cut -d, -f2)
            
            if [[ $uid -gt ${LAST_SYSTEM_RESERVED_UID} || $uid -eq ${GUEST_UID} ]]; then  
                echo "    PID: $pid; UID: $uid"
                launchctl bsexec "$pid" chroot -u "$uid" / launchctl unload "${AGENT_PLIST_SRC}"
            fi
        done
    fi
    
    echo "Agent unloading has been finished."

     # RTP Daemon

    echo "Stopping '${RTP_DAEMON_JOB_NAME}' RTP daemon..."
    sudo launchctl unload "${RTP_DAEMON_PLIST_SRC}"

    #V1 helper tool unload


    echo "Stopping '${HELPERTOOL_V1}' V1 Anti-Malware..."
    sudo launchctl unload "${HELPERTOOL_V1}"

    echo "Stopping '${HELPERTOOL_V1_OLD}' OLD MABMHelper V1 Anti-Malware..."
    sudo launchctl unload "${HELPERTOOL_V1_OLD}"

    # RTP KEXT

    echo "Unloading '${RTP_KEXT_ID}' FSO driver..."
    sudo kextunload -b "${RTP_KEXT_ID}"

    # SK Daemon

    echo "Stopping '${SK_DAEMON_JOB_NAME}' SK daemon..."
    sudo launchctl unload "${SK_DAEMON_PLIST_SRC}"
}


# - Parameters:
#   - $1: alias (or name if no alias) of application which icon should be removed from dock.
remove_dock_icon_function()
{
    APPLICATION_NAME=$1

    # '$USER' doesn't work in the installer context, that is why we use 'logname' command.
    CURRENT_USER_NAME=$(logname)

    if [ -z "${CURRENT_USER_NAME}" ]; then
        echo "Can't get the name of the current user."
    else

        # delete item from com.apple.dock.plist

        # sed option '-n' - include line number
        # sed option '-m 1' - one match
        dloc=$(sudo -u "${CURRENT_USER_NAME}" defaults read com.apple.dock persistent-apps | grep file-label | sed -n "/${APPLICATION_NAME}/=")

        if [ -z "${dloc}" ]; then
            echo "'${APPLICATION_NAME}' isn't on dock."
        else

            echo "Current user name is '${CURRENT_USER_NAME}'."

            for _ in $dloc; do

                list_index=$(sudo -u "${CURRENT_USER_NAME}" defaults read com.apple.dock persistent-apps | grep file-label | grep -n -m 1 "${APPLICATION_NAME}" | sed  's/\([0-9]*\).*/\1/')
                plist_item_index=$[$list_index-1]

                echo "Deleting '${APPLICATION_NAME}' from listindex='$list_index'  (item ${plist_item_index}) from persistent in dock app list..."
                # '~' doesn't work in the installer context, that is why we set absolute path for user home catalog.
                sudo /usr/libexec/PlistBuddy -c "Delete persistent-apps:$plist_item_index" "/Users/${CURRENT_USER_NAME}/Library/Preferences/com.apple.dock.plist"

            done
        fi
    fi
}

####test

remove_frontends_dock_icons_function()

{
  
    remove_dock_icon_function "${FRONTEND_APPLICATION_ALIAS}"
    remove_dock_icon_function "${FRONTEND_LAUNCHER_ALIAS}"
    remove_dock_icon_function "${FRONTEND_APPLICATION_ALIAS_V1}"
    remove_dock_icon_function "${FRONTEND_LAUNCHER_ALIAS_V1}"

}

####eject disk mounted
echo "eject all mounted disk"
osascript -e 'tell application "Finder" to eject (every disk whose ejectable is true)'


forget_product_package_function()
{
    sudo pkgutil --forget "${MB_PRODUCT_DOMAIN}"
    echo "'${MB_PRODUCT_DOMAIN}' package got forgotten."
}

remove_product_business_useragent_function()

{
    echo “Business version removal started“

    sudo /Library/Application\ Support/Malwarebytes/Malwarebytes\ Endpoint\ Agent/EndpointAgentDaemon -uninstall
    
    echo “Business version is removed“
}


remove_product_files_function()
{
    echo "Removing files...started"
    sudo rm -rf "${APP_SRC}"
    sudo rm -rf "${APP_SUPPORT_PRODUCT_DIR}"

    sudo rm -rf "${RTP_KEXT_SRC}"
    sudo rm -rf "${RTP_KEXT_LEGACY_SRC}"
    sudo rm -f "${AGENT_PLIST_SRC}"
    sudo rm -f "${RTP_DAEMON_PLIST_SRC}"
    sudo rm -f "${SK_DAEMON_PLIST_SRC}"

    sudo rm -rf /Users/$USER/Library/Application\ Support/com.malwarebytes.mbam.*
    sudo rm -rf /Users/$USER/Library/Application\ Support/Malwarebytes


    sudo rm -f /Users/$USER/Library/Preferences/com.malwarebytes.*


    sudo rm -f "${HELPERTOOL_V1}"
    sudo rm -f "${HELPERTOOL_V1_OLD}"

    sudo rm -rf "${APP_SRC_V1}"
    sudo rm -f "${APP_SRC_PH_V1}"
    sudo rm -f "${APP_SRC_PH_V1_OLD}"

    remove_product_business_useragent_function || true


    echo "Removing files...end"


    forget_product_package_function

    # Removing DIR even its not empty
    sudo rm -rf "${APP_SUPPORT_DIR}" || true

    remove_frontends_dock_icons_function || true


}

## ----------------------------------------
##              Main
## ----------------------------------------

killall_frontends_function || true
stop_agents_daemons_and_driver_function || true

remove_product_files_function
